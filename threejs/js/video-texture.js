(()=>{"use strict";var e={"./threejs/js/utils.js":
/*!*****************************!*\
  !*** ./threejs/js/utils.js ***!
  \*****************************/(e,n,t)=>{function i(){const e=new THREE.WebGLRenderer({alpha:!0,antialias:!0});e.setSize(window.innerWidth,window.innerHeight),e.setPixelRatio(window.devicePixelRatio),document.body.appendChild(e.domElement);const n=new THREE.PerspectiveCamera(45,window.innerWidth/window.innerHeight,.1,1e3);n.position.set(0,0,36);return{renderer:e,camera:n,scene:new THREE.Scene}}function r(e,n,t,i,r){new e.GUI;const o=new THREE.OrbitControls(n,t.domElement);o.enableDamping=!0,o.enableZoom=!0,o.autoRotate=!1,o.autoRotateSpeed=.5,o.minDistance=1,o.maxDistance=2e3,o.enablePan=!0;const a=new i;return document.body.appendChild(a.dom),{stats:a,controls:o}}function o(e,n){return()=>{e.aspect=window.innerWidth/window.innerHeight,e.updateProjectionMatrix(),n.setSize(window.innerWidth,window.innerHeight)}}t.r(n),t.d(n,{initScene:()=>i,initHelper:()=>r,onWindowResize:()=>o})}},n={};function t(i){var r=n[i];if(void 0!==r)return r.exports;var o=n[i]={exports:{}};return e[i](o,o.exports,t),o.exports}t.d=(e,n)=>{for(var i in n)t.o(n,i)&&!t.o(e,i)&&Object.defineProperty(e,i,{enumerable:!0,get:n[i]})},t.o=(e,n)=>Object.prototype.hasOwnProperty.call(e,n),t.r=e=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})};var i={};(()=>{
/*!*************************************!*\
  !*** ./threejs/js/video-texture.js ***!
  \*************************************/
t.r(i);var e=t(/*! ./utils.js */"./threejs/js/utils.js");const{renderer:n,camera:r,scene:o}=(0,e.initScene)(),{stats:a,controls:d}=(0,e.initHelper)(dat,r,n,Stats);function s(){a.update(),d.update(),n.render(o,r),requestAnimationFrame(s)}window.onresize=(0,e.onWindowResize)(r,n),Detector.webgl||Detector.addGetWebGLMessage(),function(){const e=new THREE.CylinderBufferGeometry(4,4,4*Math.PI,16,4,!0,-Math.PI/2,Math.PI),n=document.querySelector("#video"),t=new THREE.VideoTexture(n);t.wrapS=t.wrapT=THREE.ClampToEdgeWrapping,t.minFilter=THREE.LinearFilter;const i=new THREE.MeshBasicMaterial({map:t});o.add(new THREE.Mesh(e,i))}(),s()})()})();